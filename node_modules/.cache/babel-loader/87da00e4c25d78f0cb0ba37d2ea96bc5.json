{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naty_\\\\Documentos\\\\React IDEA ULLA\\\\app\\\\src\\\\components\\\\ItemListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./estilos.css\";\nimport { useEffect, useState } from \"react\";\nimport ItemList from \"./ItemList\";\nimport { useParams } from \"react-router\";\nimport { firestore, getFirestore } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = () => {\n  _s();\n\n  const [productos, setProductos] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    setProductos();\n    let collection = getFirestore().collection('productos');\n\n    if (typeof id !== 'undefined') {\n      collection = collection.where('Catalogo', '==', id);\n    } else {\n      collection = collection.where('show_in_storefront', '==', true);\n    }\n\n    collection.limit(20).get().then(querySnapshot => {\n      setProductos(querySnapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      }));\n    }).catch(() => setProductos([]));\n  }, [id]); //const db = firestore\n  //const ItemCollection = db.collection(\"productos\")\n  // let consulta = ItemCollection.where(\"Catalogo\",\"==\",\"Mocca\")\n  //consulta = ItemCollection.get()\n  //consulta\n  // .then((resultado) => {\n  //   const productos_finales =  resultado.docs.map(producto => {\n  //      const producto_final = {\n  //        id: producto.id,\n  //       ...producto.data()\n  //  }\n  //  return producto_final\n  // })\n  //setProductos(productos_finales)\n  //})\n  //},[])\n  //if(id == \"Mocca\"){\n  //            ItemCollection\n  //           .where(\"Catalogo\", \"==\", id)\n  //          .get()\n  //         .then((results) => {\n  //            const data = results.docs.map((doc) => ({\n  //               id: doc.id,\n  //              ...doc.data()\n  //          }));\n  //        console.log(data)\n  //      setProductos(data)\n  //          })\n  //     .catch(err => console.log(err))\n  //   }else if(id == \"Sale\"){\n  ///      ItemCollection\n  //    .where(\"Catalogo\", \"==\", id)\n  //   .get()\n  //  .then((results) => {\n  //     const data = results.docs.map((doc) => ({\n  //        id: doc.id,\n  //       ...doc.data()\n  // }));\n  //setProductos(data)\n  // })\n  // .catch(err => console.log(err))\n  //  }else{\n  //    ItemCollection\n  //  .get()\n  //   .then((results) => {\n  //     const data = results.docs.map((doc) => ({\n  //       id: doc.id,\n  //     ...doc.data()\n  //   }));\n  // setProductos(data)\n  //   })\n  // .catch(err => console.log(err))\n  //  }\n  // },[id])\n\n  if (productos.length > 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ItemList, {\n        productos: productos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(ItemListContainer, \"x4opVO9oxowPVxl5AbDD8bM8+88=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["C:/Users/naty_/Documentos/React IDEA ULLA/app/src/components/ItemListContainer.jsx"],"names":["useEffect","useState","ItemList","useParams","firestore","getFirestore","ItemListContainer","productos","setProductos","id","collection","where","limit","get","then","querySnapshot","docs","map","doc","data","catch","length"],"mappings":";;;AAAA,OAAO,eAAP;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,aAAxC;;;;AAMA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAQN,SAAS,EAAvB;AAGJH,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,YAAY;AACR,QAAIE,UAAU,GAAGL,YAAY,GAAGK,UAAf,CAA0B,WAA1B,CAAjB;;AAEA,QAAI,OAAOD,EAAP,KAAc,WAAlB,EAA+B;AAC3BC,MAAAA,UAAU,GAAGA,UAAU,CAACC,KAAX,CAAiB,UAAjB,EAA6B,IAA7B,EAAmCF,EAAnC,CAAb;AACH,KAFD,MAEO;AACHC,MAAAA,UAAU,GAAGA,UAAU,CAACC,KAAX,CAAiB,oBAAjB,EAAuC,IAAvC,EAA6C,IAA7C,CAAb;AACH;;AAEDD,IAAAA,UAAU,CAACE,KAAX,CAAiB,EAAjB,EACKC,GADL,GAEKC,IAFL,CAEUC,aAAa,IAAI;AACnBP,MAAAA,YAAY,CAACO,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAI;AACvC,eAAO;AAACT,UAAAA,EAAE,EAAES,GAAG,CAACT,EAAT;AAAa,aAAGS,GAAG,CAACC,IAAJ;AAAhB,SAAP;AACH,OAFY,CAAD,CAAZ;AAGH,KANL,EAMOC,KANP,CAMa,MAAMZ,YAAY,CAAC,EAAD,CAN/B;AAOH,GAjBI,EAiBF,CAACC,EAAD,CAjBE,CAAT,CALgC,CAwBxB;AACA;AAED;AACC;AAEA;AACD;AACE;AACC;AACE;AACC;AACC;AACA;AACH;AACC;AACJ;AACR;AAEQ;AACR;AACC;AACC;AACC;AACC;AACC;AACC;AACA;AACE;AACE;AACR;AACC;AAEE;AACC;AACE;AACC;AACC;AACC;AACC;AACC;AAEE;AACC;AACL;AACA;AAEL;AACE;AACE;AACD;AACE;AACE;AACE;AACF;AACE;AACN;AACE;AAEL;AACH;;AAKC,MAAGF,SAAS,CAACc,MAAV,GAAmB,CAAtB,EAAwB;AAExB,wBACG;AAAA,6BAEC,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEd;AAArB;AAAA;AAAA;AAAA;AAAA;AAFD,qBADH;AAMC,GARD,MASI;AACD,wBACK;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADL;AAKF;AAAC,CAxGN;;GAAMD,iB;UAEYH,S;;;KAFZG,iB;AA2GN,eAAeA,iBAAf","sourcesContent":["import \"./estilos.css\"\r\nimport {useEffect, useState} from \"react\"\r\nimport ItemList from \"./ItemList\"\r\nimport { useParams } from \"react-router\"\r\nimport { firestore, getFirestore } from \"../firebase\"\r\n\r\n\r\n\r\n\r\n\r\nconst ItemListContainer = () => {\r\n    const [productos,setProductos] = useState([])\r\n    const { id }= useParams()\r\n\r\n    \r\nuseEffect(()=>{\r\n    setProductos()\r\n        let collection = getFirestore().collection('productos')\r\n\r\n        if (typeof id !== 'undefined') {\r\n            collection = collection.where('Catalogo', '==', id)\r\n        } else {\r\n            collection = collection.where('show_in_storefront', '==', true)\r\n        }\r\n\r\n        collection.limit(20)\r\n            .get()\r\n            .then(querySnapshot => {\r\n                setProductos(querySnapshot.docs.map(doc => {\r\n                    return {id: doc.id, ...doc.data()}\r\n                }))\r\n            }).catch(() => setProductos([]))\r\n    }, [id])\r\n\r\n        //const db = firestore\r\n        //const ItemCollection = db.collection(\"productos\")\r\n        \r\n       // let consulta = ItemCollection.where(\"Catalogo\",\"==\",\"Mocca\")\r\n        //consulta = ItemCollection.get()\r\n\r\n        //consulta\r\n       // .then((resultado) => {\r\n         //   const productos_finales =  resultado.docs.map(producto => {\r\n          //      const producto_final = {\r\n            //        id: producto.id,\r\n             //       ...producto.data()\r\n              //  }\r\n              //  return producto_final\r\n           // })\r\n            //setProductos(productos_finales)\r\n        //})\r\n//},[])\r\n        \r\n        //if(id == \"Mocca\"){\r\n//            ItemCollection\r\n //           .where(\"Catalogo\", \"==\", id)\r\n  //          .get()\r\n   //         .then((results) => {\r\n    //            const data = results.docs.map((doc) => ({\r\n     //               id: doc.id,\r\n      //              ...doc.data()\r\n      //          }));\r\n        //        console.log(data)\r\n          //      setProductos(data)\r\n  //          })\r\n   //     .catch(err => console.log(err))\r\n\r\n     //   }else if(id == \"Sale\"){\r\n      ///      ItemCollection\r\n        //    .where(\"Catalogo\", \"==\", id)\r\n         //   .get()\r\n          //  .then((results) => {\r\n           //     const data = results.docs.map((doc) => ({\r\n            //        id: doc.id,\r\n             //       ...doc.data()\r\n\r\n               // }));\r\n                //setProductos(data)\r\n           // })\r\n           // .catch(err => console.log(err))\r\n        \r\n      //  }else{\r\n        //    ItemCollection\r\n          //  .get()\r\n         //   .then((results) => {\r\n           //     const data = results.docs.map((doc) => ({\r\n             //       id: doc.id,\r\n               //     ...doc.data()\r\n             //   }));\r\n               // setProductos(data)\r\n         //   })\r\n           // .catch(err => console.log(err))\r\n\r\n      //  }\r\n   // },[id])\r\n\r\n      \r\n      \r\n\r\n    if(productos.length > 0){\r\n        \r\n    return (\r\n       <> \r\n        \r\n        <ItemList productos={productos} />\r\n    </>\r\n     )\r\n    }\r\n    else{\r\n       return(\r\n            <>\r\n            <p>Cargando...</p>\r\n            </>\r\n        )\r\n    }}\r\n\r\n\r\nexport default ItemListContainer"]},"metadata":{},"sourceType":"module"}